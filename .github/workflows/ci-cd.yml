name: Wisecow CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/wisecow:latest

  deploy-to-k8s:
    name: Deploy to Minikube
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Minikube context
        run: |
          minikube update-context
          kubectl config use-context minikube
          kubectl get nodes

      - name: Load Docker image into Minikube
        run: |
          minikube image load ${{ secrets.DOCKER_USERNAME }}/wisecow:latest

      - name: Apply Kubernetes manifests
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/wisecow:latest|" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Apply TLS Secret from GitHub Secrets
        run: |
          kubectl create secret tls wisecow-tls \
            --cert=<(printf "%s" "$TLS_CRT") \
            --key=<(printf "%s" "$TLS_KEY") \
            --dry-run=client -o yaml | kubectl apply -f -
        env:
          TLS_CRT: ${{ secrets.TLS_CRT }}
          TLS_KEY: ${{ secrets.TLS_KEY }}

      - name: Apply Ingress
        run: |
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for Deployment rollout
        run: |
          kubectl rollout status deployment/wisecow